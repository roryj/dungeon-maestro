AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Template for the Dungeon Maestro lambda function. Processes commands from slack, and translates them into a DnD
    based request.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 10

Parameters:
    Stage:
        Description: The stage for the function
        Type: String
        AllowedValues:
            - alpha
            - beta
            - gamma
            - prod
        Default: alpha

Resources:

    DungeonMaestroFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: ./
            Handler: maestro
            Runtime: go1.x
            Role: !GetAtt DungeonMaestroFunctionRole.Arn
            Tracing: Active
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    Stage: !Ref Stage
                    Region: !Ref AWS::Region
            Events:
                DungeonMaestro:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /
                        Method: ANY

    DungeonMaestroFunctionRole:
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                -   Action:
                    - sts:AssumeRole
                    Effect: Allow
                    Principal:
                        Service:
                        - lambda.amazonaws.com
                Version: '2012-10-17'
            Policies:
            -   PolicyDocument:
                    Statement:
                    -   Action:
                        - logs:CreateLogGroup
                        - logs:CreateLogStream
                        - logs:PutLogEvents
                        Effect: Allow
                        Resource: '*'
                    Version: '2012-10-17'
                PolicyName: DungeonMaestroLambdaBasicExecution
            -   PolicyDocument:
                    Statement:
                    -   Action:
                        - xray:PutTraceSegments
                        - xray:PutTelemetryRecords
                        Effect: Allow
                        Resource: '*'
                    Version: '2012-10-17'
                PolicyName: DungeonMaestroLambdaXRayAccess
        Type: AWS::IAM::Role

Outputs:

    DungeonMaestroApi:
      Description: "API Gateway endpoint URL for Prod stage for the Dungeon Maestro function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

    DungeonMaestroFunction:
      Description: "Dungeon Maestro Lambda Function ARN"
      Value: !GetAtt DungeonMaestroFunction.Arn

    HelloWorldFunctionIamRole:
      Description: "IAM Role created for Dungeon Maestro function"
      Value: !GetAtt DungeonMaestroFunctionRole.Arn
